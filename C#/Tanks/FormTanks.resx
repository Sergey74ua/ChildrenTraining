<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>59</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoIRklJyEaGiYgGgssKSkCIhoGADMy
        QwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnHhZ7Jx4WgSYd
        FXolHRVqJR0UWiUdE0gmHRQrJh8WHCcgGREnIh0EJjpKACcrLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAmHxgMJx8ZGCceFyUlHhU9JR0UViUcE2clHBJ1JRwShSQbEogkHBJ5IxsSZSIaEU8gGRA/IBoQMyAb
        ER8eGhAWGRMMJBkUDCUWEgoxEQ0GQRANBzsQDAg6EA0JMBAOCTIVEQ0bEQ8LLgwJB0MKBwVSCwcFTwoH
        BU8NCQdHEw8NOhANCUMOCwc+EQ0LJhMODDMTDwwkFhIOFSAaEwwTDQYCFhAHAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAnIRoTJiEaGCYgGR4lHhYkJR0VLSYeFTslHhVRJh4VYSYeFXMmHhWPJR0UrSUc
        Er0lHRK+JBwSuyMbEa4gGQ6lHBUKqxsUCqsZFAiwGBMItxcSB7YSDga2DAoFswoIBLQKBwSnCAYDswcE
        ArsGAwK9BgMCvgYEAr8HBALCCQUExQsIBs8RDgzhFBMS4BUUEuoYFxTgGRgWzhweHbs9REuSS1RgVEdR
        XSA/SFEEcYGTAAAAAAAAAAAAAAAAAAAAAAAnIRozJiAZQyUfGFUlHhZqJR0VgCYdFJElHROkIx4XzCIf
        GuoiIBryIiAc9SAeGvUiHxr2Ix8Z9SMgGfMlIRnsJiAY4iUfFtgkHhXQJB0UyiUdFMgjHBPGIBkRxhwW
        D8YYEgzJFQ8KyBENCMgOCwfICwgGyAoHBcgKBwXHCQYExhMRENgdHh36HR4d/yAgHf8fIB7/HR8f/zlB
        Sv9CSE7/OTw++TxCSNlFTVahRUxTYUhQWihVYG0IPkFHAHuWrgArJyMCKCIcAigiHAQoIh0JKSEbDSQg
        HDIjIyCbISIh9iIjIv8iIyH/HyAf/x4eHP8fHhv5Hx4a+iIgGfAgIBv+HBsX/x4fG/8jIR39IyAb+iMg
        GvcjIBryJSAZ7SUgGOklHxflJB4W4CMdFd4hGxPcHRcR2xgTDdoVDwvaFhMR4h8gIPkhIyL/ISMi/yIk
        I/8jJCP/KCww/1dthf9GUl/+ExQT/zlASv8/R1D/MTU6+0NJUOI8QUavSVBXbkBHUDcAAAAAAAAAAC0k
        FQAiJScAJSUjMSMlJr8kJiX7JCYl/yUnJ/8fHxz/Hx0Y/x8eGuIfHhrfIyIexB8fG/IVFRP+FhcX/yEg
        HfgmIx3yJCId/RcYF/8eHxz/JiQe/yIhG/8dHRv/JSMe/SMgGvsiIBv4JyMb9CUfFuQjHBTaJCQh9yIk
        JP8jJCP/JCUk/yQmJv8kJyn/Mjc8/0BPXv9PYXX+Hh4d/kBLWP9JWm3/OkNO/0VTY/86Qkv/Nz5G/ktX
        ZesAAAAAJSMfACQgGwIkJSRPJScmyyYoJv8oKij/KCko/x0eHP8bGhT/Hh0Y/x8eGvkjIh/5JiMezR4e
        Ge8TEhD/GxsY/yIhHPIqKCH0JiQd/xwcGf8jIhz+JyUe/yIhHP8fHhv9JyUe/h8fHP8hIBz/LSkg/ywn
        HfgmJiTxJykq/igqKf8pKyn/Kiwr/yksLP8qLS7/MDQ4/zpGUf9LW2v/Jygn/zdAS/9LW23/QUxZ/0hZ
        a/9FVWb/SFZm/1tthP8qJyIAJzA4ACoqJ1UpKyrnKisq/yssLP8qLCz/Hh4a/xMSDv8cGhT/IyYl/ycr
        K/8oLC3/Ki4w9CgtLvojKCr/KCwt/yovMf8uMzT/LDAx/youMP8sMDL/LzQ0/ywwMf8qLjD9LTEz/iov
        Mf8oLS//JSgq/yMlJf8rLi7/Ky0s/y0uLf8tLi3/LS8u/y4xMv8qLC3/OT1A/0FMVv9CS1T/LjAv/zpC
        S/9CTVj/OkJJ/0NPW/9BTFj/R1Ng/1Bdb/8MExcBMDAuRi4wL9UtLy7/LjAv/y0vL/8nKCX6HBgR/hkZ
        GP8oLTD/LTY7/y43O/8vODz/MTo+/zM7P/80PED/MztA/zM7QP8zOz//Mzs//zQ8QP8zOz//Mjo+/zM7
        P/8yOj7/MTk9/zA4PP8vNzz/LDM3/ywuLf8uMC//MDIw/zIzMP8xMzH/MzQz/y4yNv8yOT//SFJe/1Ni
        cf83Ojv/OkBG/1Nhcf86P0L/TFVe/0NJUP9LV2T/R05V/0NMVP8tLy8rLjIy0y8yMf8xMzH/MDMy/yww
        MP4hIR3rICAe+ykvM/8tNjv/LTU6/y43O/8uNzv/Lzg8/zA5Pf8xOj7/MTo+/zI7P/8yOz//Mjs//zE7
        P/8xOj7/Mjs//zI7Pv8yOz//Mjo//zE6Pv8xOj7/MDY4/y4xMf8vMjP/MDIx/zAzMv8xNDX/LzQ2/ysw
        M/87RE3/QUhR/y4vLP80Nzf/O0FF/z5FS/8xNDX/P0VM/zY7P/89REr/P0RK/zg9Qf8zLydxNzUt+zk2
        Lf83NCz/NDIr/ygpJ/8dHx39Jisu/yw0OP8uNzr/Lzc7/y43PP8uNz3/MTtA/zQ8Qv8zO0D/MzxB/zI7
        QP8zO0D/MjtA/zI7QP8xOT3/Lzg8/zA5PP8vODz/Ljc7/y43PP8tNjv/LTAu/zMwKP84NCz/Ozcs/z08
        N/9BQ0L/PkJF/zM5P/8tLiv/RUxS/yorKv8wMjL/Ly0m/zAxL/8vMTH/MjIv/y0vLv8tLiv/MDEv/zY5
        O/89OzecOTcz/T06Mv9EQDj/UVhc/0VZav8wOkD/OURO/0FOWf9DT1n/P0hP/z5GS/88Q0b/Nzo3/zw+
        PP9ES1H/RU1W/0RNV/9GTlf/RU9Y/0ZSXf9FU13/RlJb/0ZRW/9CTVT/QExV/zc9P/84OTf/Nzc1/zg1
        Lv8zMSz/MS4n/zQxKv82NS7/P0A+/ysuLv8iHhb/MjAo/zc3Mv8uLCb/Ih8Y/zMxKv8yMS3/LSwn/zQ0
        L/80My7/NTUy/z9APf9LRz39UlNP/11dXf9gYWH/ZG94/05nff9BUmD/VHCM/2SGqP9lhqj/Vmt+/0xY
        Yv9LVl//P0A8/zg2Lv86ODP/SE5U/1Rjcv9YaXr/UmBt/1FbYv9QWV7/T1VW/1FXW/9sh6H/Z4Ke/1xy
        iP9MSkP/VFJN/1NUUP9MSUH/SkhD/0dFPv9MRTn/Pz88/ygoJv8eHhv/Hx8b/y4tKv8wNDj/MjQ3/zk6
        OP82ODn/MTM0/zEyM/8tLiz/LS4r/y8uKv9dW1j5Y2pw/2t0fv9pcHj/b3+P/110iv89TFn/SGN+/1Nx
        j/9VbYf/Wm+E/1BXXf9JS0z/TlJV/0dFPf9BOzH/RkhI/0xVXv9KVV//R1Nb/0JQW/9AT1z/PEpX/z5G
        TP9PZ4H/YYSo/1t9n/9RU1P/XWBi/1tfX/9bWlX/XF9f/1hZV/9WVE7/X2Jm/yovNP8cISf/JSsy/y0w
        Mv8sLCf/KSch/yYkH/8iIh7/ICMj/x4gIv8bISb/HiMq/yAlK/locXx0bnmEwWx6huJseIP4coSV/HSM
        pv9BTlr/TV1t/ltodf9hb3/+a36S/1RaYv9XXWX/YnOC/2Jyf/9gbXf/TlBM/0U/NP9MRz7/UlRW/0pR
        V/9DTFP/OUBE/zxIUv8yPkr/SWJ9/1Fwjv9SXWn/YWhu/2Vsc/9nb3j/ZW94/3GAjf9zg5T/c4KT/zxC
        SP8lKzH/JSks/x0eHf8aHB7/Gh4h/xwiJ/8jKzL/LDU+/zE7RP86QEb/QEdN/Tc/RrZyhpcBaXF7DnB/
        jCRGTlWQUFdeyVRbYNlWVVSha3B5bnaPq3VZb4aDQUhK70ZLTf9lcH//anyN/2d7i/9keov/Y3eH/1Rc
        X/9CPTL/R0dB/1llcf9ca3r/V2Fq/01TWP9JVF//SFlp/0ddcv9KYXX/Xmx6/3GDlf96kKX/dIea/36V
        q/+Al67/eo2i/0hJTf8jKC7/HyYu/yw0Pf82Pkf/Q01X/1BYYP9UXmb/WmZx/lVgauI+QUHBYnF9emV3
        ih4AAAAAAAAAAEdDOgAyLSYbRkI8RFhRTCd2bWkGT0g+ACwqIgAsKiIuNDMq2DQzLO89QEHyY3KB/Wl8
        i/9peor/ZniJ/2V6jP9caHP/SEU9/0M+NP9VXWT/YnWK/1luhf9UaHr/VWRz/1NeaP9VXGf/U1tk/1Ze
        Zv9aZG//WmZx/1plcv9icID/bXyO/19nc/9LTFD/T1NX/0tPUP9CQ0H/S1Zf+1NhbuZRXmu6WWZygWhz
        fitDSk8LjqjKAYihwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4/PwA/QUAMQkNBMT4/
        PDg7PT1CYG99k2p7i/Jpe4v7ZniI/GR4if9keYv/YHKA/05SUP9DPTH/Tk9N/15qfP9bcIj/VXCK/1Zz
        jf9ccoj/XG18/19xf/9jdYT/WGh4/11WTf9mX1n/QElR/1hqfP9DUFz/NTxD/zY/Rv8uMzX7Nj5EpE5d
        ay9ZZXEMZnJ/AV5qdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABZY28AW2RwCmV1hUdmeIdbZHaGYmh3iG1ldoV4Y3WGhmJyhZFAQkLPMjAn/zc4
        NP9DUF//SFht/zlKWv8tOEH/LDI3/zpBRv9banj/RVRh/1xWTP9yaWL/OT9F/zZBSf8+TVv/R1lq/1hs
        gP9WaXz/TmBwxkZSXhJGUl4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////ABgf
        IwAkJyd4IiQl/xweH/8cHSD/Gx4h/xkdIf8bHiD/HiEk/yMlJv8uMzf/ISQl/zI0NP9VXWb/UmJy/192
        i/9rgpj/cIie/3eNov98lar/eZGoul5ufwxld4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHx0dADI2MQApKSZXJScm+h8hI/8cHyH/Gh0g/x0gI/8jJyr/KCkn/ygqKP8nKSb/Mzg5/0hX
        Y/9lfJL/c42m/3OLof9whZj/coaY/3aKn/92gab9doqfbYqpwwBfZnAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAnMD0ALTdGAiczPhMkMDw0JC85WyIqNJEiJzDGJCox/CcvN/8uOEP/NUJO/zdCTP9EWW3/OkBD/y8w
        LP84Ozr/U2Br/2d8j/9thZz/couk/3mQp/93jJ//fJKk/3iEpP9sXajuV2JjPWNzbwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYz
        QAAoLzUHIy46GiMuOTwjLTduJC85mik1PsktOULtMz5I+ztIU/9FU2D/UmJx/1ptgP9dcob/WW2B/19z
        if9Wbof/TFZh/0dNU/9SW2X/coea/22EmP9fdIj/ZnuP/3yTqf95j6P/eY2f/3WEk/9teYW3PEJKKEFI
        UQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmKC8AJiIpASUu
        OQokLjgiIi04TiIsNnwjLTisJTA51ys1PvAyPEX+PEdR/0pXYf9ZZnL/ZHOA/Wx9i/VxgY/ZdIGOym54
        g+5kcn/1Xm1692l8j/lbbX79Wmp3/1treP9nd4f/i6S+/3CHm/9jdof/aXuK/2x/jv9pe4z+Y3OC+WV3
        h6tneIQef5qtAEhNVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClAUgAhJC8BJzQ/DyY0
        QDAmMj1XJzM9iyYyPLknMjrdKjU++DM8Rv8/SlP/TVpj/1xpdP9ndYH+bXyJ7XGAjctzgY6ldIKPcHSD
        jkNxf4sfYWlyE1JfazVTYW1EV2RuSlpmcFZdanVjVmNucFBeaYBYZnOQeY6jkXWLoYBtg5d5SlVdwT9I
        T7lZbH51TFhjWVdoehdYan0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnNkMbJzZCNic2
        QmgoNkGYKjdBxC05QukzPkf6PEZO/0ZRWv9TXmf/X2p1/2h1gflvforkc4ORxHWFlJJ1hZJlcYGOOG16
        hxNibXgF//A6AGdwegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRGMgBNQC4AHBcRAR4U
        CwAFAAABFRAOFBoaHA0AAAAAQjAgAUAuHwBALh8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqOELXLjpE7TVASf0/SlL/TFdg/1llbv9kcn3+bHyJ9XGBjt10hZSydYaViHSFlFVzhJQocIKUEGl3
        hQJpeYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABSXmf/X2x3/2t4hf5wgY/vc4WUznKElKdzhpd2cYWWRG2BkSJpfI4H/ObVAEZf
        dwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1iJrEdombl3OGmGZtgJI8aXqMFVppegVWWGQAXmZ0AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhdIMPU15lA1FfZwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAAP//////8AAAA//////wAAAAAAAAD/AAAAAAAAAB8AAAAAAAAAAwAAAAAAAAAAAADwAAAAAAAAAMAA
        AAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4YAAAAABAAD/gAAAAA8AAP/4AAAAPwAA///4AAA/AAD///gAAH8AAP//
        AAAAfwAA//AAAAB/AAD+AAAAAP8AAOAAAAAB/wAAAAAf/ov/AAAAAf////8AAAA//////wAAA///////
        AAA///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>