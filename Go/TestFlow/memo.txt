.gitignore - Go и VSCode

Команды терминала:
go run main.go - запуск кода (к примеру тут - http://127.0.0.1:8080/)
go build main.go - компилируется exe-шник (консоль + сервер)
./main.exe - запуск exe-шника (сервера) из терминала.
ctrl+c (en) - остановка сервера

go mod init [название модуля] - подключение модулей
go mod tidy - запрашивает система для сброса

import
    "fmt" - консоль
	"net/http" - веб-странички
    "html/template" - шаблоны html


-= MODEL =-

type User struct {
	Name string
	Age uint16
	Arr []string
}

func (u *User) getUserName() string {
    return fmt.(u.Name)
}


-= VIEW =-

<h1>О проекте</h1>
<p>{{.Name}}</p>
<p>{{.Age}}</p>
Условия: {{if (eq ==, ne !=, lt <, gt >) .Name "Unknow"}} {{else}} {{end}}
Циклы: {{range .Arr}} {{.}} {{else}} список пуст {{end}}



-= CONTROL =-

Урлы (страница и функция):
http.HandleFunc("/home/", )

Слушатель порта (адрес, настройки или nil):
http.ListenAndServe("localhost:8080", nil)

Функции контроллера (w - вывод страниц, r - запрос):
func home(w http.ResponseWriter, r *http.Request) {
	fmt.Println("Сервер работает (сообщение в консоль)")
	fmt.Fprint(w, "<b>Сервер работает</b> (вывод в html)")
}

func about(w http.ResponseWriter, r *http.Request) {
	data := User{"Ышкыльдык", 123}
	page, _ := template.ParseFiles("template/home.html")
	page.Execute(w, data)
}

#############################################
Для работы с SQLite в Go ввести в терминал:
go get github.com/mattn/go-sqlite3

Добавить в импорт
	"database/sql"
	"github.com/mattn/go-sqlite3"

Подключаем БД:
	dbms := "sqlite3"
	path := "./model/db.sqlite"
	db, _ := sql.Open(dbms, path)

Запрос к БД:
db.Query() - выбор многих строк
db.QueryRow() - выбор одной строки

db.Exec() - запись в БД, обновление и удаление
result.LastInsertId() - возвращает id последнего добавления
result.RowsAffected() - возвращает количество добавленных строк

//Проверка запроса
r.Method == GET, POST, OPTIONS, HEAD, PUT, PATCH, DELETE, TRACE, CONNECT

#############################################
1. Устанавливаем Go (сейчас 1.23.4)
2. Проверяем версию в консоли: go version
 - если нет, добавляем путь в Path
3. Проверяем окружение: go env
 - GOBIN=   ??? Надо добавить C:\Users\Sergey\go\bin (/bin - утилиты по go install)
 - GOMODCACHE=C:\Users\Sergey\go\pkg\mod (? /pkg - зависимости по go get)
 - GOPATH=C:\Program Files\Go\bin
 - GOROOT=C:\Program Files\Go
4. Установливаем модуль VS Code: Go (тут можно тоже прописать пути, локально)
5. Проверяем пути в Path и GOPATH: C:\Program Files\Go\bin
6. В VS Code жмем Ctrl+Shift+P - Go install / Upadate Tools - и все ставим
7. Доставил SQLite3 Editor, go get github.com/mattn/go-sqlite3 (не сразу)
 - Все равно ошибка: panic: Binary was compiled with 'CGO_ENABLED=0',
   go-sqlite3 requires cgo to work. This is a stub
8. Устанавливаю компилятор GCC, т.к. без него не работает SQLite3.
 - https://github.com/msys2/msys2-installer/releases/download/2024-12-08/msys2-x86_64-20241208.exe
9. От администратора, вводим команду: pacman -S mingw-w64-ucrt-x86_64-gcc
10. Добавляем в Path: C:\Program Files\msys64\ucrt64\bin
11. Проверяем в терминале: gcc --version
12. Ура! Заработало!