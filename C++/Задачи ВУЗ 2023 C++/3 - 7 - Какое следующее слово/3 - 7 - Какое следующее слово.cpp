/* Дан файл data.txt с текстом. Текст состоит из слов разделенных пробелами. Слова состоят из строчных латинских символов.
Текст заканчивается словом stopword. Посмотреть содержимое файла можно тут.
Реализуйте алгоритм, который по введённому слову target предскажет следующее слово. А именно, выведет в терминал три
возможных варианта следующего за target слова (без повторов) по следующим правилам:
Если есть слово X, которое, в тексте, встречалось после слова target чаще остальных, то выводим его.
Если слова X и Y встречались одинаковое количество раз после слова target, то выводим то, которое лексикографически меньше.
Например, для hi и by, нужно вывести by.
Если все различные слова, которые встречались после target уже выведены (даже если их меньше 3х), то закончить вывод;
Если слова target в тексте нет, выведите один символ минус -.
Например:
Текст: текст состоит из слов разделенных пробелами слова состоят из строчных латинских символов stopword
Таргет: слов
Вывод: разделенных 
Таргет: из
Вывод: слов строчных
Таргет: бэтмен
Вывод: -
Как получить данные из файла

Формат ввода
Файл data.txt, расположен в том же каталоге, что и программа. На вход программе подаётся одно слово target состоящее из строчных латинских символов.
Формат вывода
Символ минус - или до 3х слов разделённых пробелами.

Пример 1
Ввод	Вывод
your
hair grandmother shoulders
Пример 2
Ввод	Вывод
already
fifteen
*/

#include <iostream>
#include <fstream>
#include <map>

int main() {
    std::ifstream f("data.txt");
    std::map<std::string, int> m;
    std::string r[3], w, target;
    bool h = false;

    std::cin >> target;
    if (f.is_open()) {
        for (f >> w; !f.eof(); f >> w) {
            if (w == "stopword")
                break;
            else if (h == true) {
                h = false;
                m[w]++;
            } else if (w == target)
                h = true;
        }
        f.close();
    }

    for (const auto& p : m)
        if (p.first.size() >= 1 && p.second >= r[0]) { ////////
            r[2] = r[1];
            r[1] = r[0];
            r[0] = p.first;
        }

    if (r[0] == "") ////////
        std::cout << "-";
    else
        for (const std::string i : r)
            std::cout << i << " ";
}