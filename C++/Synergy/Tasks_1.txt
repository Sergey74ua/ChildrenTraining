Дисциплина			-	Start
Группа				-	РC++ш-ЦПД-242211/30-11МОо
Домашнее задание

Введение в С++
1. Установить Visual Studio
2. Создать проект «Консольное приложение»
3. Инициализировать 10 переменных разных типов, из которых 2 должны быть глобальными, 2 должны являться константами, 2 строками, а каждую оставшуюся преобразовать к другому типу. Для каждого преобразования указать возможна ли потеря информации.
4. В программе объявлены 2 переменные символьного типа, 3 переменные целочисленного типа int, 1 логическая переменная, 2 вещественных переменных с плавающей точкой и двойной точностью. Определить сколько байт и сколько бит информации необходимо данной программе для хранения переменных.
5. Какое число выводится при преобразовании символа ‘A’ к целочисленному типу? Почему именно такое число?
6. Чем интерпретатор отличается от компилятора?

Конструкции ветвления
1. Составить 10 выражений с различными переменными и операциями. Вывести результат в поток ввода-вывода
2. Пользователь вводит 3 целых числа. Написать программу, выводящую меньшее из них
3. Дополнить калькулятор, реализованный на вебинаре. Добавить возможность возведения в квадрат и вычисления остатка от деления.

Циклы
1. Вывести на экран таблицу квадратов чисел от 10 до 20. Сделать блок-схему алгоритма.
2. Найти сумму числе от 1 до n (n вводит пользователь). Сделать блок-схему алгоритма.
3. Найти все делители данного натурального числа. Сделать блок-схему алгоритма.

Массивы
1. Почему при выходе за пределы массива мы получаем «мусор», а не нули?
2. Создать массив из первых 10 нечётных чисел
3. Создать и отсортировать по невозрастанию массив из 10 чисел, вывести среднее арифметическое его элементов.
4. Создать массив из 10 чисел, найти и вывести наибольший элемент

Указатели
1. Создать 4 указателя на различные типы данных. Вывести адреса этих указателей. Попросить пользователя ввести значения для данных указателей. Вывести введённые значения с помощью операции разыменования.
2. Создать массив из десяти чисел типа int и вывести его элементы, используя операции над указателями. Помним, что идентификатор массива фактически является указателем на первый элемент массива.
3. Создать и заполнить вручную динамический массив вещественных чисел двойной точности. Размер массива и его значения вводит пользователь.
4. Создать структуру, которая хранит имя человека и его номер телефона. Создать очередь из 5-ти структур и вывести результат. Помним, что в очереди кто первым записался, тот первым и обслуживается.

Генерация псевдослучайных чисел
1. Создать свой вариант простейшего ГПСЧ, вывести 100 полученных чисел.
2. С помощью функций rand() и srand() создайте ГПСЧ, который выводит количество очков, полученных при бросании двух игральных кубиков. Не забудьте учесть теорию вероятностей. Выведите не менее 100 исходов.
3. Напишите произвольный ГПСЧ, использующий функцию time(). Создайте точку останова, запустите отладчик, добавьте основные переменные в watch-лист и проследите за изменением их значений при выполнении программы. Прикрепите 3 снимка экрана, где видно отслеживание переменных.

Строки и файлы
1. Объявить произвольную строку четырьмя различными способами, вывести эти строки в консоль
2. Объяснить что значат фразы «строка s1 равна строке s2» и «строка s2 больше строки s3».
3. Пользователь вводит 2 различных строки в консоль. Считать эти строки и вывести их размер в консоль.
4. Пользователь вводит через пробел в консоль свои имя и фамилию. Получить 2 отдельные строки, где одна строка хранит имя, а другая фамилию. Использовать методы find() и erase().
5. Пользователь вводит в консоль своё имя. Записать в файл строку, приветствующую пользователя по имени, затем считать эту строку из файла и вывести её в консоль.

Функции
1. Написать программу, в которой объявлены функции sum() и mult(), первая функция возвращает сумму двух чисел, а вторая возвращает произведение двух чисел. В функции main() попросить пользователя ввести два числа, после чего вывести результаты выполнения функций sum() и mult() для введённых чисел.
2. Написать функцию, которая уменьшает введённое пользователем целое число (НЕ его копию!) в два раза. Перегрузить эту функцию, добавив возможность уменьшать число типа double.
3. Написать программу, в которой будет рекурсивная функция подсчёта степени числа.

Игра "Сапёр"
1. Повторить реализацию игры «Сапёр», которую рассмотрели на вебинаре. Напротив каждой функции и значимого блока кода (циклы, условия) написать поясняющий комментарий.